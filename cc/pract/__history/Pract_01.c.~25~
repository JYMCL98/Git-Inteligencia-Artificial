#include <Pract_01.h>
// Neurona perceptrón
//Definimos los pines de la LCD
#define LCD_ENABLE_PIN  PIN_B0                                  
#define LCD_RS_PIN      PIN_B1                               
#define LCD_RW_PIN      PIN_B2                                
#define LCD_DATA4       PIN_B4                               
#define LCD_DATA5       PIN_B5
#define LCD_DATA6       PIN_B6                          
#define LCD_DATA7       PIN_B7
// Incluímos la librería de la LCD
#include<lcd.c>

// Uso de puertos digitales
#use standard_io(a)
#use standard_io(b)
#use standard_io(c)
#use standard_io(d)

//variables de entrada
int a0,a1,a2,a3,a4,a5,b3;
int d0,d1,d2;

//P
int P[10][8]={{1,1,1,1,1,1,0,0}, //#0
             {0,1,1,0,0,0,0,1}, //#1
             {1,1,0,1,1,0,1,2}, //#2
             {1,1,1,1,0,0,1,3}, //#3
             {0,1,1,0,0,1,1,4}, //#4
             {1,0,1,1,0,1,1,5}, //#5
             {1,0,1,1,1,1,1,6}, //#6
             {1,1,1,0,0,0,0,7}, //#7
             {1,1,1,1,1,1,1,8}, //#8
             {1,1,1,1,0,1,1,9}}; //#9
int q=0;



// Matriz de pesos sinápticos
float W[7];
float W_pares[7]={-1.83023295,0.18487814,-1.8548141,-1.02052942,5.33631598,3.19274906,-0.17758607};
float W_impares[7]={-0.38090369,-0.28619119,0.55797538,0.84650135,-4.75746564,-1.80008944,0.72753792};
float W_mayores_5[7]={19.12431432,0.73664961,5.55001773,-16.91241935,3.62793877,3.23903785,10.04068788};

//Vector de polarización
float b;

//función escalón
int hardlim(float n){
   int value;
   if(n>0){
      value=1;
   }
   else{
      value=0;
   }
   return value;
}

void mensaje_par(){
   lcd_gotoxy(1,1);
   printf(lcd_putc,"   PARES  ");
}


void mensaje_impar(){
   lcd_gotoxy(1,1);
   printf(lcd_putc,"   IMPARES ");
}

void mensaje_m5(){
   lcd_gotoxy(1,1);
   printf(lcd_putc,"  MAYORES A 5   ");
}


void mensaje_n(){
   lcd_gotoxy(1,1);
   printf(lcd_putc," NINGUNA OPCION ");
   lcd_gotoxy(1,2);
   printf(lcd_putc,"  SELECCIONADA  ");
}

void entradas(int q){
      //Número pares
      if(q==1){
         for(int k=0; k<7; k++){
            W[k] = W_pares[k];
         }
         b=-0.42977263;   
      }
      //Numeros impares
      else if(q==2){
         for(int k=0;k<7;k++){
            W[k] = W_impares[k];
         }
         b=0.55867424;
      }
      //Números mayores a 5
      else if(q==3){  
         for(int k=0;k<7;k++){
            W[k] = W_mayores_5[k];
         }
         b=-21.3405321;
      }

      int entrada[7]={0,0,0,0,0,0,0};
      
      entrada[0] = input(PIN_A0);
      entrada[1] = input(PIN_A1);
      entrada[2] = input(PIN_A2);
      entrada[3] = input(PIN_A3);
      entrada[4] = input(PIN_A4);
      entrada[5] = input(PIN_A5);
      entrada[6] = input(PIN_B3);
      
      int n=0,i=0,j=0;
      
      for(i=0;i<10;i++){
         n=0;
         for(j=0;j<7;j++){
            if (P[i][j]==entrada[j]){
               n += 1;
            }
            else
            {
               n=0;
            }
         }
         if(n==7){
            break;
         }
      }
      if(n==7){
         lcd_gotoxy(1,1);
         
         
         float sum=0;
         int perceptron=0;   
         j=0;
         
         while(j<7){
            sum += entrada[j]*W[j];
            j++;
         }
         
         perceptron = hardlim(sum+b);
         
         lcd_gotoxy(1,2);
         if(perceptron==1){
            switch (q){
            case 1:
               printf(lcd_putc,"\fSi es par");
               delay_ms(1000);
               break;
            case 2:
               printf(lcd_putc,"\fSi es impar");
               delay_ms(1000);
            break;
            case 3:
               printf(lcd_putc,"\fSi es > 5");
               delay_ms(1000);
            break;
            }
            
         }
         else{
            switch (q){
            case 1:
               printf(lcd_putc,"\fNo es par");
               delay_ms(1000);
               break;
            case 2:
               printf(lcd_putc,"\fNo es impar");
               delay_ms(1000);
            break;
            case 3:
               printf(lcd_putc,"\fNo es > 5");
               delay_ms(1000);
            break;
            }
         }
      }
      
      else{
         lcd_gotoxy(1,1);
         printf(lcd_putc,"\fNo existe       ");
         //lcd_gotoxy(1,2);
         //printf(lcd_putc,"               ");
         output_C(0b00);
         delay_ms(1000);
      }
}

void main(){

   set_tris_a(0xFF);//dipswitch
   set_tris_b(0b00001000); //rb3=entrada
   set_tris_c(0x00);//salida a display
   set_tris_d(0b00000111);//switch de 3 segmentos
   
   output_a(0x00);
   output_b(0x00);
   output_c(0x00);
   output_d(0x00);
   
   lcd_init(); //Inicializamos la lcd
   
   int B_1=0,B_11=1;
   int B_2=0,B_21=1;
   int B_3=0,B_31=1;
   
   while(TRUE){
      //Elegir el programa
      B_1 = input(PIN_D0);
      B_2 = input(PIN_D1);
      B_3 = input(PIN_D2);
      
      
      output_bit(PIN_C0, entrada[0]);
      output_bit(PIN_C1, entrada[1]);
      output_bit(PIN_C2, entrada[2]);
      output_bit(PIN_C3, entrada[3]);
      output_bit(PIN_C4, entrada[4]);
      output_bit(PIN_C5, entrada[5]);
      output_bit(PIN_C6, entrada[6]);
      
      if(B_1!=B_11 || B_2!=B_21 || B_3!=B_31){
         printf(lcd_putc,"\f");
         //Número pares
         if(B_1==1 && B_2==0 && B_3==0){
            mensaje_par();
            delay_ms(1000);
            printf(lcd_putc,"\f");
            q=1;     
         }
         //Números impares
         else if(B_1==0 && B_2==1 && B_3==0){
            mensaje_impar();
            delay_ms(1000);
            printf(lcd_putc,"\f");
            q=2;
         }
         //Números mayores a 5
         else if(B_1==0 && B_2==0 && B_3==1){  
            mensaje_m5();
            delay_ms(1000);
            printf(lcd_putc,"\f");
            q=3;
         }
         // No seleccionó correctamente
         else if(B_1==0 && B_2==0 && B_3==0){
            mensaje_n();
            q=4;
            delay_ms(1000);
         }
         
         else{
            lcd_gotoxy(1,1);printf(lcd_putc,"\f  No existe  ");
            q=4;
            delay_ms(1000);
         }
         
      }
      
      if (q!=4){
         entradas(q);
      }
      
      B_11=B_1;
      B_21=B_2;
      B_31=B_3;
      
   }
}


