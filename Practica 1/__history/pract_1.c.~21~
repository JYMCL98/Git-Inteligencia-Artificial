#include <pract_1.h>

#include <lcd.c>
//sensor de color (piña o manzana)
//celda de carga (peso)
#use standard_io(a)
#use standard_io(b)
#use standard_io(c)
//variables de entrada
int a0,a1,a2,a3,a4,a5,b3;
//función escalón
int hardlim(float n){
   int value;
   if(n>0){
      value=1;
   }
   else{
      value=0;
   }
   return value;
}


void main()
{
   lcd_init();//Inicializamos la lcd
   set_tris_a(0xFF);//dipswitch
   set_tris_b(0b00001000); //rb3=entrada
   set_tris_c(0x00);//salida a display
   output_b(0x00);
   output_c(0x00);
   output_a(0x00);
   
   a0=0;a1=0;a2=0;a3=0;a4=0;a5=0;b3=0;
      
   // Números del 0 al 9
   //int digitos[10]={0b00111111,0b00000110,0b01011011,0b01001111,0b01100110,0b01101101,0b01111101,0b00000111,0b01111111,0b01101111};
   
   // Para el producto punto
   int numero_0[7]={1,1,1,1,1,1,0};//0
   int numero_1[7]={0,1,1,0,0,0,0};//1
   int numero_2[7]={1,1,0,1,1,0,1};//2
   int numero_3[7]={1,1,1,1,0,0,1};//3
   int numero_4[7]={0,1,1,0,0,1,1};//4
   int numero_5[7]={1,0,1,1,0,1,1};//5
   int numero_6[7]={1,0,1,1,1,1,1};//6
   int numero_7[7]={1,1,1,0,0,0,0};//7
   int numero_8[7]={1,1,1,1,1,1,1};//8
   int numero_9[7]={1,1,1,1,0,1,1};//9
   
   // Matriz de pesos sinápticos
   float W[7]={-2.36275721,0.0655979,-1.99657071,-1.56694457,5.66948898,2.24811854,0.37284792};
   //Vector de polarización
   float b=-0.59955928;
   
   while(TRUE)
   {
      int i,j;
      for (i=0;i<10;i++){ // Recorre a todos los números
      float sum=0;
      int perceptron=0;
      //leemos la entrada
      a0=input(PIN_A0);
      a1=input(PIN_A1);
      a2=input(PIN_A2);
      a3=input(PIN_A3);
      a4=input(PIN_A4);
      a5=input(PIN_A5);
      b3=input(PIN_B3);
      
      int digitos[2]={input(PIN_A0),a1=input(PIN_A1)};
      
      //RA0
      if(a0==1){
      output_high(PIN_C0);
      }
      else{output_low(PIN_C0);}
      //RA1
      if(a1==1){
      output_high(PIN_C1);
      }
      else{output_low(PIN_C1);}
      //RA2
      if(a2==1){
      output_high(PIN_C2);
      }
      else{output_low(PIN_C2);}
      //RA3
      if(a3==1){
      output_high(PIN_C3);
      }
      else{output_low(PIN_C3);}
      //RA4
      if(a4==1){
      output_high(PIN_C4);
      }
      else{output_low(PIN_C4);}
      //RA5
      if(a5==1){
      output_high(PIN_C5);
      }
      else{output_low(PIN_C5);}
      //RB3
      if(b3==1){
      output_high(PIN_C6);
      }
      else{output_low(PIN_C6);}
      
      
        /*
      switch(i){
      case 0:
         for(j=0;j<7;j++){
            sum = sum +numero_0[j]*W[j];//producto punto #0
         }
         perceptron = hardlim(sum+b);
      break;
      
      case 1:
         for(j=0;j<7;j++){
            sum = sum +numero_1[j]*W[j];//producto punto #0
         }
         perceptron = hardlim(sum+b);
      break;
      
      case 2:
         for(j=0;j<7;j++){
            sum = sum +numero_2[j]*W[j];//producto punto #0
         }
         perceptron = hardlim(sum+b);
      break;
      
      case 3:
         for(j=0;j<7;j++){
            sum = sum +numero_3[j]*W[j];//producto punto #0
         }
         perceptron = hardlim(sum+b);
      break;
      
      case 4:
         for(j=0;j<7;j++){
            sum = sum +numero_4[j]*W[j];//producto punto #0
         }
         perceptron = hardlim(sum+b);
      break;
      
      case 5:
         for(j=0;j<7;j++){
            sum = sum +numero_5[j]*W[j];//producto punto #0
         }
         perceptron = hardlim(sum+b);
      break;
      
      case 6:
         for(j=0;j<7;j++){
            sum = sum +numero_6[j]*W[j];//producto punto #0
         }
         perceptron = hardlim(sum+b);
      break;
      
      case 7:
         for(j=0;j<7;j++){
            sum = sum +numero_7[j]*W[j];//producto punto #0
         }
         perceptron = hardlim(sum+b);
      break;
      case 8:
         for(j=0;j<7;j++){
            sum = sum +numero_8[j]*W[j];//producto punto #0
         }
         perceptron = hardlim(sum+b);
      break;
      
      case 9:
         for(j=0;j<7;j++){
            sum = sum +numero_9[j]*W[j];//producto punto #0
         }
         perceptron = hardlim(sum+b);
      break;
      
      }
      
      */
      //si ponemos otra combinación dice que no existe
      
      // Pares
      
      // #0
      if(a0==1 && a1==1 && a2==1 && a3==1 && a4==1 && a5==1 && b3==0){
         lcd_gotoxy(2,2);
         printf(lcd_putc,"\fHola mundo");
         //output_c(0b00111111);
         for(j=0;j<7;j++){
            sum = sum +numero_0[j]*W[j];//producto punto #0
         }
         perceptron = hardlim(sum+b);
         
         // Par o no
      if (perceptron==1){ //se activó, es par
         lcd_gotoxy(1,1);
         printf(lcd_putc,"\fSi es par"); 
      }
      else{
         lcd_gotoxy(1,1);
         printf(lcd_putc,"\fNo es par");
      }
         
      }
      //#1
      else if(a0==0 && a1==1 && a2==1 && a3==0 && a4==0 && a5==0 && b3==0){
         //output_c(0b00000110);
         for(j=0;j<7;j++){
            sum = sum +numero_1[j]*W[j];//producto punto #0
         }
         perceptron = hardlim(sum+b);
         
         // Par o no
      if (perceptron==1){ //se activó, es par
         lcd_gotoxy(1,1);
         printf(lcd_putc,"\fSi es par"); 
      }
      else{
         lcd_gotoxy(1,1);
         printf(lcd_putc,"\fNo es par");
      }
      
      }
      
      
      // Imprime los números del 0 al 9
      //output_c(digitos[i]);
      //output_c(z);
      delay_ms(1000);
      
      a0=0;a1=0;a2=0;a3=0;a4=0;a5=0;b3=0;
      
      }
   }

}

/*

#include <P1.h>
// Neurona perceptrón
#include <lcd.c>
//sensor de color (piña o manzana)
//celda de carga (peso)

int hardlim(float n){
   int value;
   if(n>0){
      value=1;
   }
   else{
      value=0;
   }
   return value;
}

void main()
{
   lcd_init();
   // Números del 0 al 9
   int digitos[10]={0b00111111,0b00000110,0b01011011,0b01001111,0b01100110,0b01101101,0b01111101,0b00000111,0b01111111,0b01101111};
   // Para el producto punto
   int numero_0[7]={1,1,1,1,1,1,0};//0
   int numero_1[7]={0,1,1,0,0,0,0};//1
   int numero_2[7]={1,1,0,1,1,0,1};//2
   int numero_3[7]={1,1,1,1,0,0,1};//3
   int numero_4[7]={0,1,1,0,0,1,1};//4
   int numero_5[7]={1,0,1,1,0,1,1};//5
   int numero_6[7]={1,0,1,1,1,1,1};//6
   int numero_7[7]={1,1,1,0,0,0,0};//7
   int numero_8[7]={1,1,1,1,1,1,1};//8
   int numero_9[7]={1,1,1,1,0,1,1};//9
   // Matriz de pesos sinápticos
   float W[7]={-2.36275721,0.0655979,-1.99657071,-1.56694457,5.66948898,2.24811854,0.37284792};
   //Vector de polarización
   float b=-0.59955928;
   while(TRUE)
   {
      int i;
      for (i=0;i<10;i++){ // Recorre a todos los números
      float sum=0;
      int perceptron=0;
      int j;
      switch(i){
      case 0:
         for(j=0;j<7;j++){
            sum = sum +numero_0[j]*W[j];//producto punto #0
         }
         perceptron = hardlim(sum+b);
      break;
      
      case 1:
         for(j=0;j<7;j++){
            sum = sum +numero_1[j]*W[j];//producto punto #1
         }
         perceptron = hardlim(sum+b);
      break;
      
      case 2:
         for(j=0;j<7;j++){
            sum = sum +numero_2[j]*W[j];//producto punto #2
         }
         perceptron = hardlim(sum+b);
      break;
      
      case 3:
         for(j=0;j<7;j++){
            sum = sum +numero_3[j]*W[j];//producto punto #3
         }
         perceptron = hardlim(sum+b);
      break;
      
      case 4:
         for(j=0;j<7;j++){
            sum = sum +numero_4[j]*W[j];//producto punto #4
         }
         perceptron = hardlim(sum+b);
      break;
      
      case 5:
         for(j=0;j<7;j++){
            sum = sum +numero_5[j]*W[j];//producto punto #5
         }
         perceptron = hardlim(sum+b);
      break;
      
      case 6:
         for(j=0;j<7;j++){
            sum = sum +numero_6[j]*W[j];//producto punto #6
         }
         perceptron = hardlim(sum+b);
      break;
      
      case 7:
         for(j=0;j<7;j++){
            sum = sum +numero_7[j]*W[j];//producto punto #7
         }
         perceptron = hardlim(sum+b);
      break;
      case 8:
         for(j=0;j<7;j++){
            sum = sum +numero_8[j]*W[j];//producto punto #8
         }
         perceptron = hardlim(sum+b);
      break;
      
      case 9:
         for(j=0;j<7;j++){
            sum = sum +numero_9[j]*W[j];//producto punto #9
         }
         perceptron = hardlim(sum+b);
      break;
      
      }
      //si ponemos otra combinación dice que no existe
      
      //
      if (perceptron==1){ //se activó
         lcd_gotoxy(1,1);
         printf(lcd_putc,"\fSi es par"); 
      }
      else{
         lcd_gotoxy(1,1);
         printf(lcd_putc,"\fNo es par");
      }
      // Imprime los números del 0 al 9
      output_c(digitos[i]);
      delay_ms(1000);
      
      }
   }

}

*/






















/*#include <lcd.c>

int hardlim(float n)
{
   int value;
   if (n>0)
   {
      value =1;
   }
   else
   {
      value =0;
   }
   return value;
}

void main()
{
   lcd_init();
   int digitos[10] = {0b00111111, 0b00000110,0b01011011, 0b01001111, 0b01100110, 0b01101101, 0b01111101, 0b00000111, 0b01111111, 0b01101111};
   
   int numero_0[7] = {1,1,1,1,1,1,0};
   int numero_1[7] = {0,1,1,0,0,0,0};
   int numero_2[7] = {1,1,0,1,1,0,1};
   int numero_3[7] = {1,1,1,1,0,0,1};
   int numero_4[7] = {0,1,1,0,0,1,1};
   int numero_5[7] = {1,0,1,1,0,1,1};
   int numero_6[7] = {1,0,1,1,1,1,1};
   int numero_7[7] = {1,1,1,0,0,0,0};
   int numero_8[7] = {1,1,1,1,1,1,1};
   int numero_9[7] = {1,1,1,1,0,1,1};
   
   
   /*P = [[1,1,1,1,1,1,0],  #0
    [0,1,1,0,0,0,0],  #1
    [1,1,0,1,1,0,1],  #2
    [1,1,1,1,0,0,1],  #3
    [0,1,1,0,0,1,1],  #4
    [1,0,1,1,0,1,1],  #5
    [1,0,1,1,1,1,1],  #6
    [1,1,1,0,0,0,0],  #7
    [1,1,1,1,1,1,1],  #8
    [1,1,1,1,0,1,1]]  #9*/
  /* 
   float W[7] = {-2.00110239,1.222889,-1.88721041,-2.36789349,7.48619925,2.09311383,0.95273707};
   float b = 0.51248145;
   
   while(TRUE)
   {
      
      for (int i=0; i<10;i++)
      {
         int j;
         float sum=0;
         int perceptron = 0;
         
         switch (i){
            case 0:
               for (j=0;j<7;j++)
               {
                  sum = sum + numero_0[j]*W[j];
               }
            case 1:
               for (j=0;j<7;j++)
               {
                  sum = sum + numero_1[j]*W[j];
               }
            case 2:
               for (j=0;j<7;j++)
               {
                  sum = sum + numero_2[j]*W[j];
               }
            case 3:
               for (j=0;j<7;j++)
               {
                  sum = sum + numero_3[j]*W[j];
               }
            case 4:
               for (j=0;j<7;j++)
               {
                  sum = sum + numero_4[j]*W[j];
               }
            case 5:
               for (j=0;j<7;j++)
               {
                  sum = sum + numero_5[j]*W[j];
               }
            case 6:
               for (j=0;j<7;j++)
               {
                  sum = sum + numero_6[j]*W[j];
               }
            case 7:
               for (j=0;j<7;j++)
               {
                  sum = sum + numero_7[j]*W[j];
               }
            case 8:
               for (j=0;j<7;j++)
               {
                  sum = sum + numero_8[j]*W[j];
               }
            case 9:
               for (j=0;j<7;j++)
               {
                  sum = sum + numero_9[j]*W[j];
               }

            break;
         }
         
         
         perceptron = hardlim(sum+b);
         
         
         if (perceptron == 1)
         {
            lcd_gotoxy(1,1);
            printf(lcd_putc,"\fSi es par");
         }
         else
         {
            lcd_gotoxy(1,1);
            printf(lcd_putc,"\fNo es par");
         }
         output_c(digitos[i]);
         delay_ms(1000);
      }
         

      //TODO: User Code
   }

}*/
